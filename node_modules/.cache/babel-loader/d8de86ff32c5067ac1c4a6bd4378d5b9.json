{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\01-starting-project\\\\01-starting-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const loginData = localStorage.getItem(\"isLoggedIn\");\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Downloads/01-starting-project/01-starting-project/src/App.js"],"names":["React","useState","Login","Home","MainHeader","App","isLoggedIn","setIsLoggedIn","loginData","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMO,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAlB;;AAEA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC;AACA;AACAJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GALD;;AAOA,QAAMQ,aAAa,GAAG,MAAM;AAC3BR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAFD;;AAIA,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,4BACC,QAAC,UAAD;AAAY,MAAA,eAAe,EAAED,UAA7B;AAAyC,MAAA,QAAQ,EAAES;AAAnD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,iBACE,CAACT,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,cADjB,EAEEL,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;GAxBQV,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst loginData = localStorage.getItem(\"isLoggedIn\");\n\n\tconst loginHandler = (email, password) => {\n\t\t// We should of course check email and password\n\t\t// But it's just a dummy/ demo anyways\n\t\tlocalStorage.setItem(\"isLoggedIn\", \"1\");\n\t\tsetIsLoggedIn(true);\n\t};\n\n\tconst logoutHandler = () => {\n\t\tsetIsLoggedIn(false);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n\t\t\t<main>\n\t\t\t\t{!isLoggedIn && <Login onLogin={loginHandler} />}\n\t\t\t\t{isLoggedIn && <Home onLogout={logoutHandler} />}\n\t\t\t</main>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}